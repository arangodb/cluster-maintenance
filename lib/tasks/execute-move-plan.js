/* jshint globalstrict:false, strict:false, sub: true */
/* global print */
exports.name = "execute-move-plan";
exports.group = "move shard tasks";
exports.args = [
  {
    "name": "move-plan-file",
    "optional": false,
    "type": "jsonfile",
    "description": "json file generated by create-move-plan"
  },
  { "name": "amount",
    "optional": true,
    "type": "int",
    "description": "limit for number of shards to move"
  }
];
exports.args_arangosh = "--server.endpoint COORDINATOR";
exports.description = "Executes plan created by create-move-plan task.";
exports.selfTests = ["arango", "db", "coordinatorConnection"];
exports.requires = "3.3.23 - 3.9.99";
exports.info = `
Executes operations that have been calculated by the create-move-plan task. 
This operation will do the actual rebalancing of a cluster.
`;

exports.run = function (extra, args) {
  const helper = require('../helper.js');
  const _ = require('underscore');

  let shardsToMove = helper.getValue("move-plan-file", args);
  let amount = helper.getValue("amount", args);
  if (amount === undefined) {
    amount = -1;
  }

  let failed = 0;
  let success = 0;

  _.each(shardsToMove, function (shard) {
    if (amount > 0 || amount === -1) {
      try {
        print("Moving shard: " + shard.shard + " from: " + shard.fromServer + " to: " + shard.toServer);
        let res = helper.httpWrapper('POST', '/_admin/cluster/moveShard', shard);
        if (res.error) {
          print("Failed: " + res.errorNum.errorMessage);
          print(res);
          failed++;
        } else {
          success++;
        }
      } catch (e) {
        print(e);
        failed++;
      }
      if (amount > 0) {
        amount--;
      }
    }
  });

  print("Started " + success + " move jobs. (" + failed + " of them failed)");
};
